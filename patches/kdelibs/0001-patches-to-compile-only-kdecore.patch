From 5699857950d030d12e1639b53186d37d60d43f8f Mon Sep 17 00:00:00 2001
From: Gregory Schlomoff <gregory.schlomoff@gmail.com>
Date: Thu, 10 Feb 2011 10:33:52 +0700
Subject: [PATCH] patches to compile only kdecore

---
 CMakeLists.txt                       |    9 ++++++++-
 cmake/modules/FindKDE4Internal.cmake |    3 ++-
 kdecore/CMakeLists.txt               |   12 ++++++------
 kdecore/localization/kcatalog.cpp    |    4 ++++
 kdecore/tests/CMakeLists.txt         |    2 ++
 5 files changed, 22 insertions(+), 8 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 86cbf20..070bf2c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -70,6 +70,7 @@ macro_log_feature(PERL_FOUND "Perl" "Needed for building kdelibs" "http://www.pe
 find_package(ZLIB)
 macro_log_feature(ZLIB_FOUND "ZLib" "Support for gzip compressed files and data streams" "http://www.zlib.net" TRUE "" "Required by the core KDE libraries and some critical kioslaves")
 
+if (NOT KIMAP_STANDALONE)
 set(STRIGI_MIN_VERSION 0.6.3)
 find_package(Strigi)
 if (WIN32)
@@ -84,6 +85,7 @@ macro_log_feature(STRIGI_FOUND "Strigi" "Desktop indexing and search support" "h
 set(LIBATTICA_MIN_VERSION "0.1.90")
 find_package(LibAttica)
 macro_log_feature(LIBATTICA_FOUND "libattica" "Support for Get Hot New Stuff" "git clone git://anongit.kde.org/attica" TRUE "${LIBATTICA_MIN_VERSION}" "")
+endif (NOT KIMAP_STANDALONE)
 
 #optional features
 if(X11_FOUND)
@@ -119,8 +121,10 @@ macro_log_feature(SHAREDDESKTOPONTOLOGIES_FOUND "Shared desktop ontologies" "Sup
 macro_optional_find_package(QCA2)
 macro_log_feature(QCA2_FOUND "QCA2" "Support for remote plasma widgets" "http://delta.affinix.com/qca" FALSE "2.0.0" "")
 
+if (NOT KIMAP_STANDALONE)
 find_package(DBusMenuQt)
 macro_log_feature(DBUSMENUQT_FOUND "DBusMenuQt" "Support for notification area menus via the DBusMenu protocol" "git clone git://gitorious.org/dbusmenu/dbusmenu-qt.git" TRUE "" "")
+endif (NOT KIMAP_STANDALONE)
 
 ################# Disallow in-source build #################
 
@@ -278,6 +282,7 @@ check_library_exists(socket connect "" HAVE_SOCKET_LIBRARY)
 
 add_subdirectory( cmake )
 add_subdirectory( kdecore )
+if (NOT KIMAP_STANDALONE)
 add_subdirectory( kdeui )
 if (UNIX)
    add_subdirectory( kpty )
@@ -326,10 +331,12 @@ add_subdirectory( plasma )
 endif(NOT WINCE)
 add_subdirectory( kunitconversion )
 add_subdirectory( kdewebkit )
+endif (NOT KIMAP_STANDALONE)
 add_subdirectory( includes )
-
+if (NOT KIMAP_STANDALONE)
 add_subdirectory( experimental )
 macro_optional_add_subdirectory( doc  )
+endif (NOT KIMAP_STANDALONE)
 
 ################# write dependency file which will be installed #################
 
diff --git a/cmake/modules/FindKDE4Internal.cmake b/cmake/modules/FindKDE4Internal.cmake
index ef705fb..e410fc8 100644
--- a/cmake/modules/FindKDE4Internal.cmake
+++ b/cmake/modules/FindKDE4Internal.cmake
@@ -702,6 +702,7 @@ endif(_kdeBootStrapping  OR  TARGET ${KDE4_TARGET_PREFIX}nepomuk)
 # which helps with finding the phonon installed as part of kdesupport:
 
 # only make Phonon REQUIRED if KDE4 itself is REQUIRED
+if (NOT KIMAP_STANDALONE)
 find_package(Phonon 4.3.80 ${_REQ_STRING_KDE4})
 set(KDE4_PHONON_LIBRARY ${PHONON_LIBRARY})
 set(KDE4_PHONON_LIBS ${PHONON_LIBS})
@@ -711,7 +712,7 @@ if(NOT PHONON_FOUND)
    message(STATUS "KDE4 not found, because Phonon was not found")
    return()
 endif(NOT PHONON_FOUND)
-
+endif (NOT KIMAP_STANDALONE)
 
 #####################  provide some options   ##########################################
 
diff --git a/kdecore/CMakeLists.txt b/kdecore/CMakeLists.txt
index 4d96b50..58328f7 100644
--- a/kdecore/CMakeLists.txt
+++ b/kdecore/CMakeLists.txt
@@ -166,9 +166,9 @@ endif (UNIX)
 add_subdirectory( kconfig_compiler )
 add_subdirectory( tests )
 add_subdirectory( sonnet/tests )
-if ( NOT WINCE )
+if ( NOT WINCE AND NOT KIMAP_STANDALONE)
     add_subdirectory( network/kssld )
-endif ( NOT WINCE )
+endif ( NOT WINCE AND NOT KIMAP_STANDALONE )
 
 ########### next target ###############
 
@@ -454,7 +454,7 @@ if (NOT "${KDE4_AUTH_BACKEND_NAME}" STREQUAL "FAKE")
     install( TARGETS kauth-policy-gen EXPORT kdelibsToolsTargets DESTINATION ${LIBEXEC_INSTALL_DIR})
 endif (NOT "${KDE4_AUTH_BACKEND_NAME}" STREQUAL "FAKE")
 
-if ( NOT WINCE )
+if ( NOT WINCE AND NOT KIMAP_STANDALONE )
     ########### next target ###############
 
     # KAuth backend plugin
@@ -483,7 +483,7 @@ if ( NOT WINCE )
                 RUNTIME DESTINATION ${KAUTH_HELPER_PLUGIN_DIR}
         )
     endif (NOT "${KDE4_AUTH_HELPER_BACKEND_NAME}" STREQUAL "FAKE")
-endif ( NOT WINCE )
+endif ( NOT WINCE AND NOT KIMAP_STANDALONE )
 
 ########### next target ###############
 
@@ -498,7 +498,7 @@ install(TARGETS kde4-config ${INSTALL_TARGETS_DEFAULT_ARGS} )
 
 ########### next target ###############
 
-if(NOT WINCE)
+if(NOT WINCE AND NOT KIMAP_STANDALONE)
     # kjs hash stuff for transcript plugin
     set( CREATE_HASH_TABLE ${CMAKE_SOURCE_DIR}/kjs/create_hash_table )
 
@@ -529,7 +529,7 @@ if(NOT WINCE)
 
     install( TARGETS ktranscript DESTINATION ${PLUGIN_INSTALL_DIR} )
 
-endif(NOT WINCE)
+endif(NOT WINCE AND NOT KIMAP_STANDALONE )
 
 ########### install files ###############
 install( FILES ${CMAKE_CURRENT_BINARY_DIR}/all_languages DESTINATION ${LOCALE_INSTALL_DIR}  )
diff --git a/kdecore/localization/kcatalog.cpp b/kdecore/localization/kcatalog.cpp
index 1f01688..1fd3024 100644
--- a/kdecore/localization/kcatalog.cpp
+++ b/kdecore/localization/kcatalog.cpp
@@ -169,9 +169,11 @@ QString KCatalog::localeDir() const
   return QFile::decodeName(d->localeDir);
 }
 
+#ifndef KIMAP_STANDALONE
 #ifdef Q_WS_WIN
   extern "C" int __declspec(dllimport) _nl_msg_cat_cntr;
 #endif
+#endif
 
 void KCatalogPrivate::setupGettextEnv ()
 {
@@ -195,10 +197,12 @@ void KCatalogPrivate::setupGettextEnv ()
 
     // Magic to make sure Gettext doesn't use stale cached translation
     // from previous language.
+#ifndef KIMAP_STANDALONE
 #ifndef _MSC_VER
     extern int _nl_msg_cat_cntr;
 #endif
     ++_nl_msg_cat_cntr;
+#endif
   }
 }
 
diff --git a/kdecore/tests/CMakeLists.txt b/kdecore/tests/CMakeLists.txt
index 7c3db77..1b67c56 100644
--- a/kdecore/tests/CMakeLists.txt
+++ b/kdecore/tests/CMakeLists.txt
@@ -141,11 +141,13 @@ target_link_libraries(kmimeglobsfileparsertest ${KDE4_KDECORE_LIBS} ${QT_QTTEST_
 
 # compile httpfilter.cpp into the test since it's not part of kdelibs
 # (only par of kio_http and kmultipart)
+if (NOT KIMAP_STANDALONE)
 set(kfiltertest_SRCS kfiltertest.cpp ../../kio/httpfilter/httpfilter.cc)
 include_directories( ${CMAKE_SOURCE_DIR}/kio/httpfilter )
 kde4_add_unit_test(kfiltertest TESTNAME kdecore-kfiltertest ${kfiltertest_SRCS})
 target_link_libraries(kfiltertest ${KDE4_KDECORE_LIBS} ${QT_QTTEST_LIBRARY} )
 target_link_libraries(kfiltertest ${ZLIB_LIBRARIES})
+endif (NOT KIMAP_STANDALONE)
 
 ########### module for klibloadertest ###############
 
-- 
1.7.4.msysgit.0

